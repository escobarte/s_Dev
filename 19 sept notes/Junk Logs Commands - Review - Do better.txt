sudo du -sh /var/* | sort -hr
# Find the largest directories in root
sudo du -h --max-depth=2 / 2>/dev/null | sort -hr | head -20
# Find large files over 100MB
sudo find / -type f -size +100M 2>/dev/null | head -10
# Check log sizes
sudo du -sh /var/log/*
# Clean old logs (keep last 7 days)
sudo journalctl --vacuum-time=7d

sudo docker system df

sudo du -sh /var/lib/docker/overlay2/
sudo du -sh /usr/*/ | sort -hr

# Check package cache and installed software
sudo du -sh /usr/share/* | sort -hr | head -10
sudo du -sh /usr/lib/* | sort -hr | head -10
sudo du -sh /usr/bin /usr/sbin

# Disk Space Analysis & Cleanup Commands Summary

## Initial Problem
- Root filesystem `/dev/mapper/OS-root` was 97% full (11G used, 449MB free)
- Critical space shortage requiring immediate cleanup

## Analysis Commands Used

### Find Large Directories and Files
```bash
# Check overall directory sizes
sudo du -h --max-depth=2 / 2>/dev/null | sort -hr | head -20

# Find large files over 100MB
sudo find / -type f -size +100M 2>/dev/null | head -10

# Check specific directory breakdowns
sudo du -sh /var/* | sort -hr
sudo du -sh /usr/* | sort -hr
```

### Docker Space Analysis
```bash
# Check Docker overlay2 storage
sudo du -sh /var/lib/docker/overlay2/

# Check all Docker directories
sudo du -sh /var/lib/docker/*/

# Docker system space breakdown
sudo docker system df -v
```

## Key Findings
- **Docker**: 3.7GB total space usage
  - `/var/lib/docker/overlay2/`: 1.1GB
  - Other Docker components: ~2.6GB
- **`/usr` directory**: 4.0GB usage
- Combined: ~7.7GB of the 11GB used space

## Cleanup Commands

### Docker Cleanup (Safe & Effective)
```bash
# Stop running containers
sudo docker stop $(sudo docker ps -q) 2>/dev/null

# Remove unused containers, images, networks, volumes
sudo docker system prune -a --volumes

# Individual cleanup commands
sudo docker container prune -f
sudo docker image prune -a -f
sudo docker volume prune -f
sudo docker network prune -f

# Check what will be cleaned (dry run)
sudo docker system prune -a --dry-run
```

### System Package Cleanup
```bash
# Ubuntu/Debian systems
sudo apt clean
sudo apt autoclean  
sudo apt autoremove

# CentOS/RHEL/Fedora systems
sudo yum clean all
# or
sudo dnf clean all
```

### Log File Cleanup
```bash
# Clean systemd journal logs (keep 7 days)
sudo journalctl --vacuum-time=7d

# Or limit journal size to 100MB
sudo journalctl --vacuum-size=100M

# Clean old log files
sudo find /var/log -name "*.log.*" -type f -mtime +7 -delete
```

### Temporary File Cleanup
```bash
# Clean old temporary files
sudo find /tmp -type f -atime +7 -delete

# Clean user cache
rm -rf ~/.cache/*
```

## Emergency One-Liner Cleanup
```bash
sudo journalctl --vacuum-size=100M && sudo apt clean && sudo apt autoremove && sudo docker system prune -a -f
```

## Expected Results
- **Docker cleanup**: Should free 2-3GB immediately
- **Package cleanup**: Additional 500MB-1GB typically
- **Log cleanup**: Varies, could be several hundred MB
- **Total expected**: 3-5GB of free space recovery

## Important Safety Notes
- ⚠️ Never manually delete files from `/var/lib/docker/overlay2/`
- ⚠️ Use Docker commands for Docker cleanup
- ⚠️ Test critical services after cleanup
- ⚠️ Always check what will be removed with `--dry-run` when available

This should resolve your 97% disk usage and bring it down to a manageable level.