История пути формирования нового s_Dev
cd s_Dev
git status 											# branch s_dev_ops = this is an issue, that will be solved in next step
git config --global init.defaultBranch 				# check global config
git config --global init.defaultBranch main 		# Change default branch to main
git branch -m s_dev_ops main						# Branch was renamed from s_dev_ops to main
git status 											# Branch 'main'

echo "# Сюда я записал текст" > README.md
git add README.md
git commit -m "init: добавлен README.md"

#Creatign ssh connection
ssh-keygen -t rsa -b 4096 -C "github_rsa_s_Dev_2025"
ls -l ~/.ssh/id_rsa_github_s_dev*
cat ~/.ssh/id_rsa_github_s_dev.pub 					# Paste into account on GitHub
nano ~/.ssh/config									# Adding config (can be find on intenet)
chmod 600 ~/.ssh/config
chmod 600 ~/.ssh/id_rsa_github_s_dev

ssh -T git@github.commit							# Test connection

# Pushing on git
git remote -v										# Checking remote, if no add
git remote add origin git@github.com:escobarte/s_Dev.git # Adding remote

git push -u origin main

# Next copied, all my files into folder, commited and pushed to Git.





##### Just chaotic notes #####
`git init - эту папку нужно начать следить`
`git branch`
`git branch -m s_dev_ops main`
`git config --global init.defaultBranch`




git clone - скачать репозиторий
git commit - запомни изменения, коммит получает уникальный номер (хэш), сначала поместить файлы готовые к коммиту.
git add - сначала поместить файлы готовые к коммиту.
git branch - создать отдельную ветку
git rebase - добавить последовательность в мастер
git revert - 
git fetch
git checkout - переключится на ветку
git pull - подтянуть, скачать (походу для ветки)
git merge
git push



Проект который загружаем на Git называется Репозиторий.
Git, программа для контроля версий наших файлов.
Ветка - последовательность коммитов 


`
git config --list
git config --global user.name
git config --global user.email
git config --system --list    # системные настройки (может потребоваться sudo)
git config --global --list    # глобальные настройки
git config --local --list     # локальные настройки (если внутри репозитория)
nano ~/.gitconfig             # открыть глобальный конфиг
nano .git/config              # local config
ls ~/.ssh/                    # ssh key store
`


`git restore .                # если ты удалил что то, но не закомитил, и git status показывает deleted на файлах`

`git log --oneline --graph --all`


