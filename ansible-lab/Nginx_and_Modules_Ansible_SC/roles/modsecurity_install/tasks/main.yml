---
- name: Ensure nginx source tarball (matching playbook version)
  get_url:
    url: "https://nginx.org/download/nginx-{{ nginx_version }}.tar.gz"
    dest: "/usr/local/src/nginx-{{ nginx_version }}.tar.gz"
    mode: '0644'

- name: Ensure nginx source extracted
  unarchive:
    src: "/usr/local/src/nginx-{{ nginx_version }}.tar.gz"
    dest: "/usr/local/src/"
    remote_src: yes

- name: Clone ModSecurity repository
  git:
    repo: "https://github.com/SpiderLabs/ModSecurity"
    dest: "/usr/local/src/ModSecurity"
    depth: 1
    force: yes

- name: Init git submodules
  command: git submodule init
  args:
    chdir: /usr/local/src/ModSecurity

- name: Update git submodules
  command: git submodule update
  args:
    chdir: /usr/local/src/ModSecurity

- name: Run build.sh (generate build scripts)
  command: ./build.sh
  args:
    chdir: /usr/local/src/ModSecurity

- name: Run configure for ModSecurity
  command: ./configure
  args:
    chdir: /usr/local/src/ModSecurity

- name: Build libmodsecurity (make)
  command: make
  args:
    chdir: /usr/local/src/ModSecurity

- name: Install libmodsecurity (make install)
  command: make install
  args:
    chdir: /usr/local/src/ModSecurity

- name: Clone ModSecurity-nginx connector
  git:
    repo: "https://github.com/SpiderLabs/ModSecurity-nginx.git"
    dest: "/usr/local/src/ModSecurity-nginx"
    depth: 1
    force: yes

- name: Configure Nginx with ModSecurity dynamic module
  command: ./configure --with-compat --add-dynamic-module=../ModSecurity-nginx
  args:
    chdir: "{{ nginx_src_dir }}"

- name: Build Nginx dynamic modules (make modules)
  command: make modules
  args:
    chdir: "{{ nginx_src_dir }}"

- name: Ensure nginx modules directory exists
  file:
    path: /usr/lib/nginx/modules
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Copy ModSecurity dynamic module to nginx modules directory
  copy:
    src: "{{ nginx_src_dir }}/objs/ngx_http_modsecurity_module.so"
    dest: "/usr/lib/nginx/modules/ngx_http_modsecurity_module.so"
    mode: '0644'
    remote_src: yes
