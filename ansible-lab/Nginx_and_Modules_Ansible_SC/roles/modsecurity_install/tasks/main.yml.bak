---
# 1. Узнаём версию установленного nginx (нужно для скачки исходников)
- name: Get installed nginx version (clear only version number)
  shell: nginx -v 2>&1 | awk -F/ '{print $2}' | awk '{print $1}'
  register: nginx_version
  changed_when: false
  tags: modsecurity

# 2. Качаем исходники nginx той же версии (если не скачаны)
- name: Download nginx source tarball (matching installed version)
  get_url:
    url: "http://nginx.org/download/nginx-{{ nginx_version.stdout }}.tar.gz"
    dest: "/usr/local/src/nginx-{{ nginx_version.stdout }}.tar.gz"
    mode: '0644'
  tags: modsecurity

# 3. Распаковываем исходники
- name: Extract nginx source tarball
  unarchive:
    src: "/usr/local/src/nginx-{{ nginx_version.stdout }}.tar.gz"
    dest: "/usr/local/src/"
    remote_src: yes
  tags: modsecurity

# 4. Клонируем исходники ModSecurity (libmodsecurity, WAF-движок)
- name: Clone ModSecurity repository
  git:
    repo: "https://github.com/SpiderLabs/ModSecurity"
    dest: "/usr/local/src/ModSecurity"
    depth: 1
    force: yes
  tags: modsecurity

# 5. Инициализация и обновление git submodules (обязательно для сборки)
- name: Init git submodules
  command: git submodule init
  args:
    chdir: /usr/local/src/ModSecurity
  tags: modsecurity

- name: Update git submodules
  command: git submodule update
  args:
    chdir: /usr/local/src/ModSecurity
  tags: modsecurity

# 6. build.sh — генерация autoconf-файлов для сборки
- name: Run build.sh (generate build scripts)
  command: ./build.sh
  args:
    chdir: /usr/local/src/ModSecurity
  tags: modsecurity

# 7. ./configure — настройка сборки
- name: Run configure for ModSecurity
  command: ./configure
  args:
    chdir: /usr/local/src/ModSecurity
  tags: modsecurity

# 8. make — сборка (может занять до 15 минут)
- name: Build libmodsecurity (make)
  command: make
  args:
    chdir: /usr/local/src/ModSecurity
  tags: modsecurity

# 9. make install — установка библиотеки
- name: Install libmodsecurity (make install)
  command: make install
  args:
    chdir: /usr/local/src/ModSecurity
  tags: modsecurity

# 10. Проверяем, что библиотека установилась (ищем .so файлы)
- name: Find installed libmodsecurity
  shell: find / -name 'libmodsecurity*' 2>/dev/null
  register: modsec_libs
  changed_when: false
  tags: modsecurity

# 11. Клонируем коннектор (nginx dynamic module)
- name: Clone ModSecurity-nginx connector
  git:
    repo: "https://github.com/SpiderLabs/ModSecurity-nginx.git"
    dest: "/usr/local/src/ModSecurity-nginx"
    depth: 1
    force: yes
  tags: modsecurity

# 12. Формируем путь к исходникам nginx (он теперь известен точно)
- name: Set Nginx source path fact
  set_fact:
    nginx_source_dir: "/usr/local/src/nginx-{{ nginx_version.stdout }}"
  tags: modsecurity

# 13. Сборка dynamic-модуля для nginx
- name: Configure Nginx with ModSecurity dynamic module
  command: ./configure --with-compat --add-dynamic-module=../ModSecurity-nginx
  args:
    chdir: "{{ nginx_source_dir }}"
  tags: modsecurity

- name: Build Nginx dynamic modules (make modules)
  command: make modules
  args:
    chdir: "{{ nginx_source_dir }}"
  tags: modsecurity

- name: Ensure nginx modules directory exists
  file:
    path: /usr/lib/nginx/modules
    state: directory
    owner: root
    group: root
    mode: '0755'
  tags: modsecurity

# 14. Копируем собранный .so модуль в стандартную папку nginx
- name: Copy ModSecurity dynamic module to nginx modules directory
  copy:
    src: "{{ nginx_source_dir }}/objs/ngx_http_modsecurity_module.so"
    dest: "/usr/lib/nginx/modules/ngx_http_modsecurity_module.so"
    mode: '0644'
    remote_src: yes
  tags: modsecurity
