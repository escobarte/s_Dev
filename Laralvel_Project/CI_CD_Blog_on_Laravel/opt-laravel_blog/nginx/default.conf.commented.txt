# Блок виртуального хоста (сайта)
server {
  # Слушаем на порту 80 (стандартный HTTP порт)
  # В отличие от полной конфигурации, здесь нет дополнительных опций для порта
  listen 80;

  # Имя сервера - "_" означает "любое доменное имя" (catch-all)
  # Этот сервер будет обрабатывать запросы к любому домену
  server_name _;

  # Корневая директория веб-сайта
  # Nginx будет искать файлы в этой папке (/var/www/html/public - стандартная папка Laravel)
  root /var/www/html/public;
  
  # Индексные файлы по умолчанию в порядке приоритета
  # Если запрос к директории, Nginx попытается найти index.php, затем index.html
  index index.php index.html;

  # Основной обработчик для всех запросов
  location / {
    # Стандартный паттерн для Laravel (Single Page Application routing):
    # 1. Попробовать найти файл по точному пути ($uri)
    # 2. Попробовать найти директорию ($uri/)  
    # 3. Если не найдено - передать все в index.php с оригинальными параметрами
    # Это позволяет Laravel обрабатывать красивые URL типа /users/profile
    try_files $uri $uri/ /index.php?$query_string;
  }

  # Обработчик для всех .php файлов
  # Регулярное выражение ~ \.php$ означает "файлы заканчивающиеся на .php"
  location ~ \.php$ {
    # Подключаем стандартные FastCGI параметры
    # Включает переменные окружения, HTTP заголовки и т.д.
    include fastcgi_params;
    
    # Устанавливаем полный путь к PHP скрипту для выполнения
    # $document_root = /var/www/html/public (из директивы root)
    # $fastcgi_script_name = имя PHP файла (например /index.php)
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    
    # КЛЮЧЕВОЕ ОТЛИЧИЕ: передаем PHP запросы на хост "php" порт 9000
    # "php" - это имя другого Docker контейнера или сервиса
    # В предыдущей конфигурации было 127.0.0.1:9000 (локальный хост)
    fastcgi_pass php:9000;
    
    # Файл индекса по умолчанию для PHP
    fastcgi_index index.php;
  }

  # Блокируем доступ к скрытым системным файлам
  # Регулярное выражение: /\.(?!well-known) означает
  # "файлы начинающиеся с точки, НО не папка .well-known"
  # .well-known исключение нужно для SSL сертификатов Let's Encrypt
  location ~ /\.(?!well-known) {
    # Запрещаем доступ ко всем скрытым файлам (.env, .git, .htaccess и т.д.)
    # Это критически важно для безопасности!
    deny all;
  }
}