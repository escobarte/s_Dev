# Блок конфигурации виртуального хоста (сайта)
server {
 # Слушаем входящие подключения на порту 80 (стандартный HTTP порт)
 listen 80;
 
 # Принимаем запросы с любого доменного имени (_ означает "любое имя")
 # Можно указать конкретный домен, например: server_name example.com;
 server_name _;

 # Указываем корневую директорию сайта (где лежат файлы)
 # /var/www/html/public - стандартная папка для Laravel приложений
 root /var/www/html/public;
 
 # Список файлов, которые nginx будет искать по умолчанию при обращении к директории
 # Сначала ищет index.php, потом index.html
 index index.php index.html;

 # Основное правило обработки всех запросов к сайту
 location / {
   # try_files пробует найти файл в следующем порядке:
   # $uri - точное совпадение с запрошенным путем (например, /about.html)
   # $uri/ - ищет директорию с таким именем
   # /index.php?$query_string - если ничего не найдено, перенаправляет на index.php
   # Это нужно для красивых URL в Laravel (например, /users вместо /index.php?route=users)
   try_files $uri $uri/ /index.php?$query_string;
 }

 # Правило для обработки всех PHP файлов (файлы с расширением .php)
 location ~ \.php$ {
   # Подключаем стандартные параметры для FastCGI
   include fastcgi_params;
   
   # Передаем PHP-FPM полный путь к исполняемому PHP файлу
   # $document_root - корневая директория сайта
   # $fastcgi_script_name - имя PHP файла из запроса
   fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
   
   # Указываем адрес PHP-FPM сервера для обработки PHP кода
   # php:9000 - в Docker это имя контейнера с PHP и порт 9000
   # В обычной установке было бы: 127.0.0.1:9000 или unix:/var/run/php-fpm.sock
   fastcgi_pass php:9000;
   
   # Файл по умолчанию для директорий при обработке PHP
   fastcgi_index index.php;
 }

 # Правило для скрытых файлов и директорий (начинающихся с точки)
 location ~ /\.(?!well-known) {
   # Запрещаем доступ ко всем скрытым файлам (например, .env, .git, .htaccess)
   # Исключение: разрешаем доступ к .well-known (нужно для SSL сертификатов Let's Encrypt)
   # (?!well-known) - это negative lookahead, означает "точка НЕ за которой следует well-known"
   deny all;
 }
}

------------------------------------------------------------------------------------------------------------------
Что делает эта конфигурация простыми словами:

Принимает запросы от браузеров на порт 80
Ищет файлы в папке /var/www/html/public
Для обычных файлов (картинки, CSS, JS) — отдает их напрямую
Для PHP файлов — передает их на обработку PHP-FPM серверу
Для красивых URL — перенаправляет все на index.php (Laravel роутинг)
Защищает от доступа к системным файлам (.env, .git и т.д.)

Эта конфигурация оптимизирована для Laravel фреймворка, где все запросы должны проходить через единую точку входа (public/index.php).