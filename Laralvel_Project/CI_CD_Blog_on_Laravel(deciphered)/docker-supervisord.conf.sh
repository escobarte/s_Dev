# Основная секция конфигурации supervisor (менеджера процессов)
[supervisord]
# Запускаем supervisor не в режиме демона (на переднем плане)
# Это нужно для Docker, чтобы контейнер не завершился сразу после запуска
nodaemon=true

# Путь к файлу логов supervisor'а (где записываются события запуска/остановки программ)
logfile=/var/log/supervisord.log

# Файл с ID процесса supervisor'а (нужен для управления процессом)
pidfile=/var/run/supervisord.pid

# Конфигурация для программы PHP-FPM (обработчик PHP кода)
[program:php-fpm]
# Команда для запуска PHP-FPM
# --nodaemonize означает "не уходить в фоновый режим", работать на переднем плане
command=php-fpm --nodaemonize

# Автоматически запускать PHP-FPM при старте supervisor'а
autostart=true

# Автоматически перезапускать PHP-FPM если он упал/завершился
autorestart=true

# Куда записывать обычные сообщения PHP-FPM (информация, отладка)
stdout_logfile=/var/log/php-fpm.log

# Куда записывать сообщения об ошибках PHP-FPM
stderr_logfile=/var/log/php-fpm.log

# Конфигурация для программы Nginx (веб-сервер)
[program:nginx]
# Команда для запуска Nginx
# -g "daemon off;" означает "не уходить в фоновый режим"
command=nginx -g "daemon off;"

# Автоматически запускать Nginx при старте supervisor'а
autostart=true

# Автоматически перезапускать Nginx если он упал/завершился
autorestart=true

# Куда записывать обычные сообщения Nginx
stdout_logfile=/var/log/nginx.log

# Куда записывать сообщения об ошибках Nginx
stderr_logfile=/var/log/nginx.log


## Что делает этот файл простыми словами:

Представьте **Supervisor** как **управляющего в офисе**, который следит за работниками и их задачами.

### Зачем нужен Supervisor в Docker?

В обычной ситуации Docker контейнер запускает **одну программу**. Но нашему веб-сайту нужны **две программы одновременно**:
- **Nginx** — принимает запросы от браузеров
- **PHP-FPM** — обрабатывает PHP код

### Что делает конфигурация:

1. **Supervisor говорит**: "Я буду работать на переднем плане" (чтобы Docker контейнер не завершился)

2. **Для PHP-FPM**: 
   - "Запусти PHP обработчик"
   - "Если он упадет — перезапусти автоматически"
   - "Все сообщения записывай в лог файл"

3. **Для Nginx**:
   - "Запусти веб-сервер"  
   - "Если он упадет — перезапусти автоматически"
   - "Все сообщения записывай в лог файл"

### Аналогия из жизни:

Это как **умная розетка с двумя выходами**:
- В один выход включен **холодильник** (PHP-FPM) — должен работать постоянно
- В другой выход включен **телевизор** (Nginx) — тоже должен работать постоянно  
- Если что-то отключится — розетка автоматически включит обратно
- Все события записываются в журнал ("холодильник отключился в 15:30, включен в 15:31")

**Итог**: Один конфигурационный файл позволяет запускать и контролировать несколько программ в одном Docker контейнере.