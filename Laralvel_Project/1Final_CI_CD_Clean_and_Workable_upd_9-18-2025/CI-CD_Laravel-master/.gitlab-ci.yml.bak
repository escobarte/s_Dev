stages:
  - build
  - deploy
  - prod

variables:
  DOCKER_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  DOCKER_LATEST: $CI_REGISTRY_IMAGE:latest

# ========== building ... ==========
build:
  stage: build
  tags:
    - ci
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  before_script:
    - echo "Registry URL:" $CI_REGISTRY
    - echo "Project:" $CI_REGISTRY_IMAGE
    - echo "Commit:" $CI_COMMIT_SHA
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
  script:
    - echo " ..... Building the Image .... $CI_COMMIT_REF_NAME ...."
    - docker build -f Dockerfile.prod -t $DOCKER_IMAGE .
    - docker tag $DOCKER_IMAGE $DOCKER_LATEST
    - echo "Sending to registry..."
    - docker push $DOCKER_IMAGE
    - docker push $DOCKER_LATEST
    - echo "............. Building Complete! ....................."
  except:
    - tags

# ========== deploy on test (10.100.93.7) ========== 
deploy:
  stage: deploy
  tags:
    - deploy2
  script:
    - echo "Deploy on server ..."
    - echo "Server:" $(hostname)
    - echo "Downloading the image:" $DOCKER_IMAGE
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
    - docker pull $DOCKER_IMAGE
    - docker stop laravel-blog-prod || true
    - docker rm laravel-blog-prod || true
    - docker volume create laravel-db || true
    - docker run -d --name laravel-blog-prod --restart unless-stopped -p 8080:80 -v laravel-db:/var/www/html/database $DOCKER_IMAGE
    - sleep 10
    - docker ps | grep laravel-blog-prod
    - echo "Deploy on Test Env Done ==== ! http://10.100.93.6:8080"
  needs:
    - build
  only:
    - develop
    - master

# ========== PRODUCTION (10.100.93.6) ==========
prod:
  stage: prod
  tags:
    - deploy
  script:
    - echo "PRODUCTION DEPLOYMENT"
    - echo "Only from master branch"
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
    - docker pull $DOCKER_IMAGE
    - docker stop laravel-blog-prod || true
    - docker rm laravel-blog-prod || true
    - docker volume create laravel-prod-db || true
    - docker run -d --name laravel-blog-prod --restart unless-stopped -p 8080:80 -v laravel-prod-db:/var/www/html/database $DOCKER_IMAGE
    - sleep 10
    - docker ps | grep laravel-blog-prod
    - curl -I http://localhost:8080 || (echo "‚ùå Production failed!" && exit 1)
    - echo "üéâ PRODUCTION finished"
    - echo "üåê http://10.100.93.6:8080"
  needs:
    - build
    - deploy
  # Production only from master
  only:
    - master
  when: manual
